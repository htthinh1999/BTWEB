/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2020-06-02 15:56:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>TỪ ĐIỂN ANH - VIỆT</title>\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/style.css\">\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("  \t<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function () {\r\n");
      out.write("\t\t\t// Override autocomplete filter to search only from the beginning of the string \r\n");
      out.write("\t\t\t$.ui.autocomplete.filter = function (array, term){\r\n");
      out.write("\t        \tvar matcher = new RegExp( \"^\" + $.ui.autocomplete.escapeRegex(term), \"i\" );\r\n");
      out.write("\t        \treturn $.grep(array, function(value){\r\n");
      out.write("\t        \t\treturn matcher.test(value.label||value.value||value);\r\n");
      out.write("\t        \t});\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar words = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${words}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\t    $(\"#txtInput\").blur(function(){\r\n");
      out.write("\t\t         var keyEvent = $.Event(\"keydown\");\r\n");
      out.write("\t\t         keyEvent.keyCode = $.ui.keyCode.ENTER;\r\n");
      out.write("\t\t         $(this).trigger(keyEvent);\r\n");
      out.write("\t\t         return false; \r\n");
      out.write("\t\t     }).autocomplete({\t// Return 10 results\r\n");
      out.write("\t\t        source: function(request, response){\r\n");
      out.write("\t\t            var results = $.ui.autocomplete.filter(words, request.term);\r\n");
      out.write("\t\t        \tresponse(results.slice(0, 10));\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        messages:{\t// Hide result message found\r\n");
      out.write("\t\t        \tnoResults:'',\r\n");
      out.write("\t\t        \tresults: function(){}\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        select: function(event, ui){\t// Make form submit when select\r\n");
      out.write("\t\t        \t$(this).val(ui.item.value);\r\n");
      out.write("\t\t        \tdocument.getElementById(\"search-form\").submit();\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        autoFocus: true\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<div class=\"jumbotron\">\r\n");
      out.write("\t\t\t<h1>TỪ ĐIỂN ANH - VIỆT</h1>\r\n");
      out.write("\t\t\t<h6>Tra cứu từ điển Anh - Việt trực tuyến miễn phí</h6>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div style=\"text-align:center\">\r\n");
      out.write("\t\t\t<form id=\"search-form\" action=\"dictionary-look-up\" method=\"post\" style=\"display: inline-block;\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t\t<h2>TỪ ĐIỂN ANH - VIỆT</h2>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\" style=\"text-align: left\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"txtInput\">Nhập từ cần tra</label>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"ui-widget\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"search\" id=\"txtInput\" name=\"txtInput\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"submit\" class=\"ui-state-default ui-corner-all\">Tra từ</button>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<p style=\"display: block; margin-left: 10%;\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

 			if(request.getAttribute("word")!=null){
 				String word = request.getAttribute("word").toString();
  				@SuppressWarnings("unchecked")
  				Hashtable<String, String> dictionary = (Hashtable<String, String>) request.getAttribute("dictionary");
  				if(dictionary.containsKey(word)){
  					out.println("<b>" + word + "</b><br>" + dictionary.get(word));
  				}else{
  	 				out.println("Không thể tìm thấy từ bạn đang tìm kiếm");
  				}
  				request.setAttribute("word", null);
 			}
		
      out.write("\r\n");
      out.write("\t</p>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Footer -->\r\n");
      out.write("\t<footer class=\"footer\">\r\n");
      out.write("\t\t<span><strong>TỪ ĐIỂN ANH - VIỆT</strong><br>\r\n");
      out.write("\t\tĐề tài được thực hiện bởi sinh viên <strong>Huỳnh Tấn Thịnh</strong> lớp <strong>ĐHCN4A</strong> trường <strong>ĐH Thông tin Liên Lạc</strong></span>\r\n");
      out.write("\t</footer>\r\n");
      out.write("\t<!-- Footer -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
